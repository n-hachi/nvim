[[plugins]]
repo = 'Shougo/neosnippet.vim'
depends = 'neosnippet-snippets'
on_event = 'InsertCharPre'
on_ft = 'snippet'
hook_source = '''
    imap <C-k> <Plug>(neosnippet_expand_or_jump)
    smap <C-k> <Plug>(neosnippet_expand_or_jump)
    xmap <C-k> <Plug>(neosnippet_expand_target)
'''

[[plugins]]
repo = 'Shougo/neosnippet-snippets'

[[plugins]]
repo = 'Shougo/deoplete.nvim'
on_event = 'InsertEnter'
hook_source = '''
  let g:deoplete#enable_at_startup = 1
  inoremap <expr><tab> pumvisible() ? "\<C-n>" :
  \ neosnippet#expandable_or_jumpable() ?
  \       "\<Plug>(neosnippet_expand_or_jump)" : "\<tab>"
  call deoplete#custom#option({
  \ 'auto_complete_delay': 100,
  \ 'smart_case': v:true,
  \ })
'''

[[plugins]]
repo = 'Shougo/neoyank.vim'
on_event = 'TextYankPost'
on_source = ['denite.nvim']

[[plugins]]
repo = 'Shougo/neomru.vim'
on_source = ['denite.nvim']

[[plugins]]
repo = 'neoclide/denite-extra'
on_source = ['denite.nvim']

[[plugins]]
repo = 'Shougo/denite.nvim'
on_cmd = 'Denite'
hook_source = 'source ~/.config/nvim/rc/denite.rc.vim'
hook_add = '''
    nnoremap <silent> ;r
        \ :<C-u>Denite -buffer-name=register
        \ register neoyank<CR>
'''

#
# c/c++
#
[[plugins]]
repo = 'rhysd/vim-clang-format'
on_ft = ['c', 'cpp']
hook_add = '''
    let g:clang_format#code_style = "google"
    let g:clang_format#style_options = {
        \ "AccessModifierOffset" : -4,
        \ "AllowShortIfStatementsOnASingleLine" : "true",
        \ "AlwaysBreakTemplateDeclarations" : "true",
        \ "Standard" : "C++11"}

    " map to <Leader>cf in c/c++ code
    autocmd FileType c,cpp,objc nnoremap <buffer><Leader>cf :<C-u>ClangFormat<CR>
    autocmd FileType c,cpp,objc vnoremap <buffer><Leader>cf :ClangFormat<CR>
'''

[[plugins]]
repo = 'justmao945/vim-clang'
on_ft = ['c', 'cpp']
hook_add = '''
    let g:clang_c_options = '-std=c11'
    let g:clang_cpp_options = '-std=c++11 -stdlib=libc++'
'''

[[plugins]]
repo = 'vim-scripts/gtags.vim'
on_ft = ['c', 'cpp']
hook_add = '''
    nnoremap <C-h> :Gtags -f %<CR>
    nnoremap <C-j> :GtagsCursor<CR>
    nnoremap <C-n> :cn<CR>
    nnoremap <C-p> :cp<CR>
'''

[[plugins]]
repo = 'davidhalter/jedi-vim'
on_ft = ['python']

[[plugins]]
repo = 'plasticboy/vim-markdown'
on_ft = ['markdown']
on_source = ['tabular']

[[plugins]]
repo = 'godlygeek/tabular'

#
# Golang
#
[[plugins]]
repo = 'mattn/vim-goimports'
on_ft = ['go']
hook_add = '''
    let g:goimports = 1
'''
