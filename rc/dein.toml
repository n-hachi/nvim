[[plugins]]
repo = 'Shougo/dein.vim'

[[plugins]]
repo = 'kana/vim-textobj-user'

[[plugins]]
repo = 'kana/vim-operator-user'

[[plugins]]
repo = 'vim-jp/vimdoc-ja'

[[plugins]]
repo = 'tpope/vim-fugitive'
hook_add = '''
    set shell=/bin/bash
'''

[[plugins]]
repo = 'gregsexton/gitv'
hook_add = '''
  autocmd FileType git :setlocal foldlevel=99
'''

[[plugins]]
repo = 'airblade/vim-gitgutter'
hook_add = '''
  autocmd BufWinLeave * GitGutterAll
'''

[[plugins]]
repo = 'roxma/nvim-yarp'

[[plugins]]
repo = 'roxma/vim-hug-neovim-rpc'

[[plugins]]
repo = 'Shougo/vimproc.vim'
build = 'make'

[[plugins]]
repo = 'thinca/vim-quickrun'

[[plugins]]
repo = 'delphinus/lightline-delphinus'
hook_add = '''
    let g:lightline_delphinus_use_power_line_glyphs = "true"
'''

[[plugins]]
repo = 'itchyny/lightline.vim'

[[plugins]]
repo = 'dense-analysis/ale'
hook_add = '''
    " nr2char(...) is for describing icons from devicons
    let g:ale_echo_msg_format = '%severity%  %linter% - %s'
    let g:ale_sign_column_always = 1
    let g:ale_sign_error = '>>'
    let g:ale_sign_warning = '--'
'''

[[plugins]]
repo = 'majutsushi/tagbar'

[[plugins]]
repo = 'mhinz/vim-signify'

#[[plugins]]
#repo = 'atozimu/LanguageClient-neovim'

[[plugins]]
repo = 'junegunn/fzf'

[[plugins]]
repo = 'Shougo/defx.nvim'
hook_add = '''
autocmd FileType defx call s:defx_my_settings()
call defx#custom#column('icon', {
        \ 'directory_icon': '▸ ',
        \ 'file_icon': '  ',
        \ 'opened_icon': '▾ ',
        \ 'root_icon': '  ',
        \ })

call defx#custom#column('mark', {
        \ 'readonly_icon': '✗',
        \ 'selected_icon': '✓',
        \ })
call defx#custom#option('_', {
        \ 'columns': 'mark:indent:icon:filename:type:size:time',
        \ })
call defx#custom#option('_', {
        \ 'show_parent': v:true,
        \ })
function! Root(path) abort
    return fnamemodify(a:path, ':t')
endfunction
nnoremap <silent><buffer><expr> <CR>
\ defx#is_binary() ?
\ defx#do_action('execute_system') :
\ defx#do_action('open')
nnoremap <silent><buffer><expr> <CR>
\ defx#is_directory() ?
\ defx#do_action('open_directory') :
\ defx#do_action('multi', ['drop', 'quit'])
function! s:defx_my_settings() abort
    " Define mappings
    nnoremap <silent><buffer><expr> <CR>
    \ defx#do_action('open')
    nnoremap <silent><buffer><expr> c
    \ defx#do_action('copy')
    nnoremap <silent><buffer><expr> m
    \ defx#do_action('move')
    nnoremap <silent><buffer><expr> p
    \ defx#do_action('paste')
    nnoremap <silent><buffer><expr> l
    \ defx#do_action('open')
    nnoremap <silent><buffer><expr> E
    \ defx#do_action('open', 'vsplit')
    nnoremap <silent><buffer><expr> P
    \ defx#do_action('preview')
    nnoremap <silent><buffer><expr> o
    \ defx#do_action('open_tree', 'toggle')
    nnoremap <silent><buffer><expr> K
    \ defx#do_action('new_directory')
    nnoremap <silent><buffer><expr> N
    \ defx#do_action('new_file')
    nnoremap <silent><buffer><expr> M
    \ defx#do_action('new_multiple_files')
    nnoremap <silent><buffer><expr> C
    \ defx#do_action('toggle_columns',
    \                'mark:indent:icon:filename:type:size:time')
    nnoremap <silent><buffer><expr> S
    \ defx#do_action('toggle_sort', 'time')
    nnoremap <silent><buffer><expr> d
    \ defx#do_action('remove')
    nnoremap <silent><buffer><expr> r
    \ defx#do_action('rename')
    nnoremap <silent><buffer><expr> !
    \ defx#do_action('execute_command')
    nnoremap <silent><buffer><expr> x
    \ defx#do_action('execute_system')
    nnoremap <silent><buffer><expr> yy
    \ defx#do_action('yank_path')
    nnoremap <silent><buffer><expr> .
    \ defx#do_action('toggle_ignored_files')
    nnoremap <silent><buffer><expr> ;
    \ defx#do_action('repeat')
    nnoremap <silent><buffer><expr> h
    \ defx#do_action('cd', ['..'])
    nnoremap <silent><buffer><expr> ~
    \ defx#do_action('cd')
    nnoremap <silent><buffer><expr> q
    \ defx#do_action('quit')
    nnoremap <silent><buffer><expr> <Space>
    \ defx#do_action('toggle_select') . 'j'
    nnoremap <silent><buffer><expr> *
    \ defx#do_action('toggle_select_all')
    nnoremap <silent><buffer><expr> j
    \ line('.') == line('$') ? 'gg' : 'j'
    nnoremap <silent><buffer><expr> k
    \ line('.') == 1 ? 'G' : 'k'
    nnoremap <silent><buffer><expr> <C-l>
    \ defx#do_action('redraw')
    nnoremap <silent><buffer><expr> <C-g>
    \ defx#do_action('print')
    nnoremap <silent><buffer><expr> cd
    \ defx#do_action('change_vim_cwd')
endfunction
'''
